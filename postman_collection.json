{
	"info": {
		"_postman_id": "f2d162d0-998d-4ab3-bedd-a9dcc46b9208",
		"name": "IMF Gadget API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40760528"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Create Test User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"agentId\": \"admin\",\n  \"password\": \"secret\",\n  \"role\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/create-test-user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"create-test-user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Access token is set\", function () {",
									"    pm.expect(pm.response.json().accessToken).to.be.a('string');",
									"});",
									"pm.environment.set(\"accessToken\", pm.response.json().accessToken);",
									"pm.test(\"Set refresh token cookie\", function () {",
									"    pm.expect(pm.response.headers.get('Set-Cookie')).to.include('refreshToken=');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"agentId\": \"admin\",\n  \"password\": \"secret\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Gadgets",
			"item": [
				{
					"name": "Get All Gadgets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response body is an array\", function () {",
									"    pm.expect(pm.response.json()).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/gadgets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"gadgets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Gadget",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Gadget is created\", function () {",
									"    pm.expect(pm.response.json().name).to.be.a('string');",
									"    pm.environment.set(\"gadgetId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/gadgets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"gadgets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Gadget",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Gadget is updated\", function () {",
									"    pm.expect(pm.response.json().name).to.equal('Updated Gadget Name');",
									"    pm.expect(pm.response.json().status).to.equal('Deployed');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Updated Gadget Name\",\n  \"status\": \"Deployed\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/gadgets/{{gadgetId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"gadgets",
								"{{gadgetId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Decommission Gadget",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Gadget is decommissioned\", function () {",
									"    pm.expect(pm.response.json().status).to.equal('Decommissioned');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/gadgets/{{gadgetId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"gadgets",
								"{{gadgetId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Initiate Self-Destruct",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Self-destruct initiated\", function () {",
									"    pm.expect(pm.response.json().message).to.equal('Self-destruct sequence initiated');",
									"    pm.expect(pm.response.json().confirmationCode).to.be.a('string');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/gadgets/{{gadgetId}}/self-destruct",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"gadgets",
								"{{gadgetId}}",
								"self-destruct"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://upraised-imf-gadget.onrender.com",
			"type": "string"
		}
	]
}